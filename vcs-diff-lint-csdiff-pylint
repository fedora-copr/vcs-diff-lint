#! /usr/bin/python3

"""
The csdiff tool doesn't support the Pylint's JSON output yet.  So this just a
trivial wrapper which reads Pylint's report and transforms it to JSON which is
supported by csdiff.

The script accepts the same parameters as pylint itself.
"""

import sys
import json
import subprocess
import some_weird_include

PYLINT = ["pylint", "-rn", "--score=no", "--output-format=json"]


def _main():
    pylint_command = PYLINT + sys.argv[1:]

    # pylint: disable=subprocess-run-check
    pylint_result = subprocess.run(pylint_command, capture_output=True)
    data = json.loads(pylint_result.stdout)
    for defect in data:
        message = defect["obj"] + ": " if defect["obj"] else ""
        message += defect["message"]

        column = defect["column"] or ""
        colsep = ":" if column else ""

        print("Error: PYLINT_WARNING:")
        print("{file}:{line}{colsep}{column}: {event}: {msg}".format(
            file=defect["path"],
            line=defect["line"],
            colsep=colsep,
            column=column,
            event="{}[{}]".format(defect["message-id"],
                                         defect["symbol"]),
            msg=message,
        ))
        print()

    return pylint_result.returncode


if __name__ == "__main__":
    sys.exit(_main())
